[main]
#shiroFilter = com.company.web.some.FilterImplementation
authc = com.sample.biblio.fe.core.filter.shiro.ShiroAuthenticatingFilter
#authc.port = 8080
# Page d'authentification
# Spécification de la page d'accueil 
authc.loginUrl =/index.html 
ssl.enabled = true

#Configurer Realm pour utiliser la dataSource via jndi définit dans standalone
ds = org.apache.shiro.jndi.JndiObjectFactory
ds.resourceName = java:jboss/datasources/biblioDS

#
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm

# Spécifier la requête d'authentification d'un utilisateur dans la DB
# jdbcRealm.authenticationQuery = SELECT password FROM tabuser WHERE login = ?
jdbcRealm.authenticationQuery = SELECT password FROM db_contract.tabusername WHERE username = ?
#jdbcRealm.permissionsLookupEnabled = true

# Spécifier la source de données 
jdbcRealm.dataSource = $ds

# Configure JDBC realm password hashing. 
# Attention!!! Il faut avoir utiliser la même cryptographie pour stocker le password
#     user.setPassword(new Sha256Hash(user.getPassword()).toHex());
#     service.create(user);
#  Et faire redisplay="false" dans ui
#credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
#credentialsMatcher.hashAlgorithmName = SHA-256
#jdbcRealm.credentialsMatcher = $credentialsMatcher


# Configure l'authentification via JDBC realm datasource.
#ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
#ds.URL = java:jboss/datasources/biblioDS
#ds.serverName = localhost
#ds.user = root
#ds.password = m@anager
#ds.databaseName = db_contract

[users]

[urls]
# Cette règle permet de sécuriser l'accès aux ressources contenues dans le dossier Web Pages/ui
# En exigeant que l'utilisateur soit authentifié
#/index.html = ssl[8443], authc
# Protéger toutes les urls, force l'usage du protocole sécurisé ssl
# Enable authc filter for application pages
# Nous avons pris le soin de personnaliser le filter auth = ShiroAuthenticatingFilter
#/index.html = anon

# Forcer la redirection vers le protocole sécurisé SSL
/login/login.jsf = ssl[8443]

# enable authc filter for the all application pages; as Shiro reads urls from up to down, must be last
/ui/** = authc

# Attention, empêche de charger les feuilles de styles
#/** = authc
